#!/bin/bash
#
# LICENSE: CC0
#
# To the extent possible under law, the person who associated CC0 with
# this file has waived all copyright and related or neighboring rights
# to this file.
#
# You should have received a copy of the CC0 legalcode along with this
# work.  If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
#

#
# A note on usage:
#
# The 'name' and 'rule' files are required for a bpc run,
# as is the X, Y, Z dimension.
#
# The 'map' or 'tiled_fn' is the output rendered to a tiled
# JSON file, using the specified tileset_fn (path relative to
# where the tiled JSON file is) and the stride is the tile
# width.
# Specifying the map file makes sure the output gets saved in
# a reasonable way (otherwise you'd have to parse the 'verbose'
# output to make a reasonable rendering of the output) and
# the tileset_fn and stride are not technically needed but
# are used to populate the appropriate JSON values in the tiled
# file.
#
# The `-c 0` option culls the 0 tile.
# The 0 (or 'null') tile is special in the 2D tileset contexts
# of this sort and represent a tile that is not to be displayed
# and on the border. Though it might not be an error to include
# the null tiles as part of the choice in the bulk grid, the
# intent is to restrict them, which is why the 'cull' option needs
# to be set.
#
# Common Options:
#
#  -N         name file (CSV)
#  -R         rule file (CSV)
#  -M         (output) tiled file (JSON)
#  -Q         tileset to use in the tiled file (png)
#  -s         stride to use in the tiled file
#  -[XYZ] <#> dimensional ordinals. Z should be 1 for the 2d tilesets
#  -G <#>     fixing schedule. 2 is minimum entropy cell, choosing maximum belief
#  -I <#>     maximum iteration count for a step in the belief propagation convergence
#  -S <#>     seed
#  -V <#>     verbosity level
#


bpc_bin="../bpc"

mkdir -p log

######
######

name_fn="./example_tile_collection/smb_tilename.csv"
rule_fn="./example_tile_collection/smb_tilerule.csv"
tiled_fn="./example_tile_collection/smb_tiled.json"
tileset_fn="./smb_tileset.png"
stride=16

echo "running 'smb' tile collection, producing '$tileset_fn'"

$bpc_bin \
  -N $name_fn \
  -R $rule_fn \
  -M $tiled_fn \
  -Q $tileset_fn \
  -s $stride \
  -X 24 -Y 24 -Z 1 \
  -G 2 \
  -c 0 \
  -I 100000 \
  -S 1234 \
  -V 2 | tee log/smb.log

######
######


name_fn="./example_tile_collection/pm_tilename.csv"
rule_fn="./example_tile_collection/pm_tilerule.csv"
tiled_fn="./example_tile_collection/pm_tiled.json"
tileset_fn="./pm_tileset.png"
stride=8

echo "running 'pm' tile collection, producing '$tileset_fn'"

$bpc_bin \
  -N $name_fn \
  -R $rule_fn \
  -M $tiled_fn \
  -Q $tileset_fn \
  -s $stride \
  -X 32 -Y 32 -Z 1 \
  -G 2 \
  -c 0 \
  -I 100000 \
  -S 1234 \
  -V 2 | tee log/pm.log


######
######


name_fn="./example_tile_collection/amarelo_tilename.csv"
rule_fn="./example_tile_collection/amarelo_tilerule.csv"
tiled_fn="./example_tile_collection/amarelo_tiled.json"
tileset_fn="./amarelo_tileset.png"
stride=8

echo "running 'amarelo' tile collection, producing '$tileset_fn'"

$bpc_bin \
  -N $name_fn \
  -R $rule_fn \
  -M $tiled_fn \
  -Q $tileset_fn \
  -s $stride  \
  -X 42 -Y 42 -Z 1 \
  -G 2 \
  -c 0 \
  -I 100000 \
  -S 124 \
  -e 0.000001 \
  -V 2 | tee log/amarelo.log


######
######


name_fn="./example_tile_collection/stair_name.csv"
rule_fn="./example_tile_collection/stair_rule.csv"
objloc_fn="./example_tile_collection/stair_objloc.csv"
stl_fn="./example_tile_collection/stair_X24Y12Z6.stl"

echo "running 'stair' 3D tile collection, producing '$stl_fn'"

$bpc_bin \
  -N $name_fn \
  -R $rule_fn \
  -L $objloc_fn \
  -X 24 \
  -Y 12 \
  -Z 6 \
  -M $stl_fn \
  -G 2 \
  -I 100000000 \
  -S 126 \
  -e 0.000025 \
  -V 2 | tee log/stair_X24Y12Z6.log

######
######


name_fn="./example_tile_collection/stair_name.csv"
rule_fn="./example_tile_collection/stair_rule.csv"
objloc_fn="./example_tile_collection/stair_objloc.csv"
stl_fn="./example_tile_collection/stair_r_D12.stl"

echo "running 'stair' 3D tile collection (residual bp), producing '$stl_fn'"

$bpc_bin \
  -N $name_fn \
  -R $rule_fn \
  -L $objloc_fn \
  -D 12 \
  -M $stl_fn \
  -G 4 \
  -I 100000000 \
  -S 127 \
  -e 0.0000125 \
  -w 0.96 \
  -V 2 | tee log/stair_r_D12.log


######
######


name_fn="./example_tile_collection/oskar-pipe_name.csv"
rule_fn="./example_tile_collection/oskar-pipe_rule.csv"
objloc_fn="./example_tile_collection/oskar-pipe_objloc.csv"
stl_fn="./example_tile_collection/oskar-pipe_D8.stl"

echo "running 'oskar-pipe' 3D tile collection (residual bp), producing '$stl_fn'"

$bpc_bin \
  -N $name_fn \
  -R $rule_fn \
  -L $objloc_fn \
  -M $stl_fn \
  -D 8 \
  -G 2 \
  -I 100000000 \
  -e 0.0001 \
  -w 0.9 \
  -S 123 \
  -J 'd[][1:][] 0:2' \
  -V 2 | tee log/oskar-pipe_D8.log





